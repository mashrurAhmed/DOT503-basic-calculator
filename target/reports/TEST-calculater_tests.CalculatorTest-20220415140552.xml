<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="calculater_tests.CalculatorTest-20220415140552" tests="5" file="calculater_tests.py" time="0.092" timestamp="2022-04-15T14:05:55" failures="4" errors="0" skipped="0">
	<testcase classname="calculater_tests.CalculatorTest" name="test_zero_division" time="0.007" timestamp="2022-04-15T14:05:55"/>
	<testcase classname="calculater_tests.CalculatorTest" name="test_add" time="0.026" timestamp="2022-04-15T14:05:55">
		<failure type="AssertionError" message="None != 3 : Should be 3"><![CDATA[Traceback (most recent call last):
  File "D:\Programs\Python\Python310\lib\unittest\case.py", line 59, in testPartExecutor
    yield
  File "D:\Programs\Python\Python310\lib\unittest\case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "D:\Programs\Python\Python310\lib\unittest\case.py", line 549, in _callTestMethod
    method()
  File "d:\projects\dot503a2_test\src\unittest\python\calculater_tests.py", line 9, in test_add
    self.assertEqual(calculator.calculate(
  File "D:\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: None != 3 : Should be 3
]]></failure>
	</testcase>
	<testcase classname="calculater_tests.CalculatorTest" name="test_float_inputs" time="0.017" timestamp="2022-04-15T14:05:55">
		<failure type="AssertionError" message="None != 1 : Should be 1"><![CDATA[Traceback (most recent call last):
  File "D:\Programs\Python\Python310\lib\unittest\case.py", line 59, in testPartExecutor
    yield
  File "D:\Programs\Python\Python310\lib\unittest\case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "D:\Programs\Python\Python310\lib\unittest\case.py", line 549, in _callTestMethod
    method()
  File "d:\projects\dot503a2_test\src\unittest\python\calculater_tests.py", line 14, in test_float_inputs
    self.assertEqual(calculator.calculate(
  File "D:\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: None != 1 : Should be 1
]]></failure>
	</testcase>
	<testcase classname="calculater_tests.CalculatorTest" name="test_substract_by_result" time="0.018" timestamp="2022-04-15T14:05:55">
		<failure type="AssertionError" message="6.0 != 3 : Should be 3"><![CDATA[Traceback (most recent call last):
  File "D:\Programs\Python\Python310\lib\unittest\case.py", line 59, in testPartExecutor
    yield
  File "D:\Programs\Python\Python310\lib\unittest\case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "D:\Programs\Python\Python310\lib\unittest\case.py", line 549, in _callTestMethod
    method()
  File "d:\projects\dot503a2_test\src\unittest\python\calculater_tests.py", line 26, in test_substract_by_result
    self.assertEqual(calculator.calculate(
  File "D:\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 6.0 != 3 : Should be 3
]]></failure>
	</testcase>
	<testcase classname="calculater_tests.CalculatorTest" name="test_substract_from_result" time="0.024" timestamp="2022-04-15T14:05:55">
		<failure type="AssertionError" message="None != 3 : Should be 3"><![CDATA[Traceback (most recent call last):
  File "D:\Programs\Python\Python310\lib\unittest\case.py", line 59, in testPartExecutor
    yield
  File "D:\Programs\Python\Python310\lib\unittest\case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "D:\Programs\Python\Python310\lib\unittest\case.py", line 549, in _callTestMethod
    method()
  File "d:\projects\dot503a2_test\src\unittest\python\calculater_tests.py", line 20, in test_substract_from_result
    self.assertEqual(calculator.calculate(
  File "D:\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: None != 3 : Should be 3
]]></failure>
	</testcase>
</testsuite>
